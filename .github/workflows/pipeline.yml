name: Deploy Next.js App to EKS

on:
  push:
    branches:
      - 'eks_cluster'
    paths-ignore:
      - 'README.md'

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}
  IMAGE_TAG: ${{ secrets.AWS_REPO_URI }}:${{ github.sha }}
  K8S_DEPLOYMENT_NAME: kaif-app

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      
      - name: Configure AWS creds for ECR
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ARN_ROLE }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Build and Push Docker image to AWS ECR
        run: |
          docker build -t "${{ env.IMAGE_TAG }}" .
          aws ecr get-login-password | docker login --username AWS --password-stdin ${{ secrets.AWS_REPO_URI }}
          docker push "${{ env.IMAGE_TAG }}"
          echo "✅ Docker image ${{ env.IMAGE_TAG }} has been pushed to AWS ECR" >> $GITHUB_STEP_SUMMARY

  deploy:
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - name: Configure AWS creds for EKS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ARN_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Configure Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG_BASE64 }}" | base64 -d > $HOME/.kube/config

      - name: Deploy to Kubernetes
        run: |
          export IMAGE=${{ secrets.AWS_REPO_URI }}:${{ github.sha }}
          envsubst < ${{ github.workspace }}/deployment.yaml | kubectl apply -f -
          kubectl rollout status deployment/kaif-app
          echo "✅ Deployment kaif-app has been updated" >> $GITHUB_STEP_SUMMARY